#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;
// 1 vs 100

//setting arrays of characters with their strength, mana, skill, skill damage
RPG_Character character_Array[6] = {
       RPG_Character("Black Knight", 2000, 12, 1000, Weapon("Bloodthirsty Spear", 10), Skill("Sword of Hell", 30, 15)),
       RPG_Character("Assassin", 1500, 15, 500, Weapon("Wicked Blade", 12), Skill("Soul Burn", 40, 5)),
       RPG_Character("Ranger", 1500, 18, 700, Weapon("Windstrike Bow", 2), Skill("Piercing Shot", 30, 7)),
       RPG_Character("Warrior", 3000, 20, 300, Weapon("Warhammer", 20), Skill("Power Strike", 50, 6)),
       RPG_Character("Warlock", 1000, 5, 3000, Weapon("Old Cedar Staff", 8), Skill("Fireball", 100, 20)),
       RPG_Character("Priest", 4000, 8, 2000, Weapon("Holy Hammer", 7), Skill("Prayer of Renewal", 25, 5))
};

//Each character's short background story.
string background_array[6] ={
       "The original power of the noble knights were beyond what humans can hold. With solemn denomination and loyalty to the Shadow Tribe, the black knights were the main players to be the Tribe's virtuoso.\n", "They have been a part of the Inotian continent for a long time. With many rigorous training courses and real battle skills, they hold the strongest independent combat powers on the continent.\n", "In the woods, away from most human activities, live these pursuer. Shadow Tribe members contact them to collect valuable information that provides their survival.\n", "From the highlands, north of the Inotian continent, are a champion of savages. Some of them are mercenaries of the Shadow Tribe, not for the honor or wealth, but for their strong desire to slaughter enemies in battles.\n", "These wizards have been lured to the fascinating dark powers of the Shadow Tribe than of religious faith towards the church. Their practice of magic and witchcraftry is of highest destruction on the Inotian continent.\n", "Some of the dark Shadow Followers were once devoting priests of the Life-giver, Tamit. Their distorted faith towards dark magic is more destructive than it was when they were empowered with the powers of the light.\n"
};

RPG_Character hero;

int catchoice;
void StartChooseCharacter(){
   for(int i = 0; i < sizeof(character_Array)/sizeof(character_Array[0]); i++){
       cout << i + 1 << ". " << character_Array[i].getName() << endl;
   }
   cout << "Please ONLY choose a number from 1 to 6\nChoose your selection: ";
   cin >> catchoice;
   cout << endl;
   while(catchoice != 1 && catchoice != 2 && catchoice != 3 && catchoice != 4 && catchoice != 5 && catchoice != 6){
       cout << "Invalid. Choose again: ";
       cin >> catchoice;
       cout << endl;
   }
   //choosing character
   hero = character_Array[catchoice-1];
   cout << background_array[catchoice -1];
   hero.printStats();
}

int battleChoice;
int main(){
   srand(time(0));
   bool oppdefeated = false;
   int round = 1;
   bool GameOver;
   StartChooseCharacter();
   Opponent goblin("Goblin", 1, 300);
   // Access opponent properties
   cout << "Round\t" << round << endl;
   cout << "Opponent Name: " << goblin.getName() << endl;
   cout << "Opponent Health: " << goblin.getHealth() << endl;
   //first round
   do{
       cout << "\nWhat do you wanna do?\n1. Attack (With weapon).\n2. Skill Attack\n\n";
       cin >> battleChoice;
       while(battleChoice != 1 && battleChoice != 2){
           cout << "Invalid. Choose again: ";
           cin >> battleChoice;
           cout << endl;
       }
       cout << endl;
       if(battleChoice == 1){
          // hero.attack();
           cout << endl;
           goblin.takeDamage(hero.attack());
           //goblin.attack();
           hero.recieveDamage(goblin.attack());
           cout << endl;
           hero.printStats();
           cout << endl;
           goblin.printStats();
           cout << endl;
       }
       else{
           //hero.getdmg();
           cout << endl;
           hero.manaLoss();
           goblin.takeDamage(hero.getdmg());
           goblin.printStats();
           //goblin.attack();
           hero.recieveDamage(goblin.attack());
           cout << endl;
           hero.printStats();
           cout << endl;
           goblin.printStats();
           cout << endl;
       }
       if(goblin.getHealth() <= 0){
           oppdefeated = true;
           cout << "You killed it!\n";
           hero.lvlup();
           hero.printStats();
           round++;
       }
   }while(oppdefeated != true);

   //second round
   oppdefeated = false;
   Opponent bat("bat", 1, 480);
   // Access opponent properties
   cout << "Round\t" << round << endl;
   cout << "Opponent Name: " << bat.getName() << endl;
   cout << "Opponent Health: " << bat.getHealth() << endl;
   do{
       cout << "\nWhat do you wanna do?\n1. Attack (With weapon).\n2. Skill Attack\n\n";
       cin >> battleChoice;
       while(battleChoice != 1 && battleChoice != 2){
           cout << "Invalid. Choose again: ";
           cin >> battleChoice;
           cout << endl;
       }
       cout << endl;
       if(battleChoice == 1){
           //hero.attack();
           cout << endl;
           bat.takeDamage(hero.attack());
           bat.attack();
           hero.recieveDamage(bat.attack());
           cout << endl;
           hero.printStats();
           cout << endl;
           bat.printStats();
           cout << endl;
       }
       else{
           //hero.getdmg();
           cout << endl;
           hero.manaLoss();
           bat.takeDamage(hero.getdmg());
           bat.printStats();
           bat.attack();
           hero.recieveDamage(bat.attack());
           cout << endl;
           hero.printStats();
           cout << endl;
           bat.printStats();
           cout << endl;
       }

       if(bat.getHealth() <= 0){
           oppdefeated = true;
           cout << "You killed it!\n";
           hero.lvlup();
           hero.printStats();
           round++;
       }
   }while(oppdefeated != true);

   //third round
   oppdefeated = false;
   Opponent Werewolf("Werewolf", 1, 600);
   // Access opponent properties
   cout << "Round\t" << round << endl;
   cout << "Opponent Name: " << Werewolf.getName() << endl;
   cout << "Opponent Health: " << Werewolf.getHealth() << endl;
   do{
       cout << "\nWhat do you wanna do?\n1. Attack (With weapon).\n2. Skill Attack\n\n";
       cin >> battleChoice;
       while(battleChoice != 1 && battleChoice != 2){
           cout << "Invalid. Choose again: ";
           cin >> battleChoice;
           cout << endl;
       }
       cout << endl;
       if(battleChoice == 1){
           //hero.attack();
           cout << endl;
           hero.manaLoss();
           Werewolf.takeDamage(hero.attack());
           Werewolf.attack();
           hero.recieveDamage(Werewolf.attack());
           cout << endl;
           hero.printStats();
           cout << endl;
           Werewolf.printStats();
           cout << endl;
       }
       else{
           //hero.getdmg();
           cout << endl;
           hero.manaLoss();
           Werewolf.takeDamage(hero.getdmg());
           Werewolf.printStats();
           Werewolf.attack();
           hero.recieveDamage(Werewolf.attack());
           cout << endl;
           hero.printStats();
           cout << endl;
           Werewolf.printStats();
           cout << endl;
       }

       if(Werewolf.getHealth() <= 0){
           oppdefeated = true;
           cout << "You killed it!\n";
           hero.lvlup();
           hero.printStats();
           round++;
       }
   }while(oppdefeated != true);

   //fourth round
   oppdefeated = false;
   Opponent CaveSpider("CaveSpider", 3, 650);
   // Access opponent properties
   cout << "Round\t" << round << endl;
   cout << "Opponent Name: " << CaveSpider.getName() << endl;
   cout << "Opponent Health: " << CaveSpider.getHealth() << endl;
   do{
       cout << "\nWhat do you wanna do?\n1. Attack (With weapon).\n2. Skill Attack\n\n";
       cin >> battleChoice;
       while(battleChoice != 1 && battleChoice != 2){
           cout << "Invalid. Choose again: ";
           cin >> battleChoice;
           cout << endl;
       }
       cout << endl;
       if(battleChoice == 1){
           //hero.attack();
           cout << endl;
           CaveSpider.takeDamage(hero.attack());
           CaveSpider.attack();
           hero.recieveDamage(CaveSpider.attack());
           cout << endl;
           hero.printStats();
           cout << endl;
           CaveSpider.printStats();
           cout << endl;
       }
       else{
           //hero.getdmg();
           cout << endl;
           hero.manaLoss();
           CaveSpider.takeDamage(hero.getdmg());
           CaveSpider.printStats();
           CaveSpider.attack();
           hero.recieveDamage(CaveSpider.attack());
           cout << endl;
           hero.printStats();
           cout << endl;
           CaveSpider.printStats();
           cout << endl;
       }

       if(CaveSpider.getHealth() <= 0){
           oppdefeated = true;
           cout << "You killed it!\n";
           hero.lvlup();
           hero.printStats();
           round++;
       }
   }while(oppdefeated != true);

   //fifth round
   oppdefeated = false;
   Opponent CursedSummon("CursedSummon", 3, 750);
   // Access opponent properties
   cout << "Round\t" << round << endl;
   cout << "Opponent Name: " << CursedSummon.getName() << endl;
   cout << "Opponent Health: " << CursedSummon.getHealth() << endl;
   do{
       cout << "\nWhat do you wanna do?\n1. Attack (With weapon).\n2. Skill Attack\n\n";
       cin >> battleChoice;
       while(battleChoice != 1 && battleChoice != 2){
           cout << "Invalid. Choose again: ";
           cin >> battleChoice;
           cout << endl;
       }
       cout << endl;
       if(battleChoice == 1){
           //hero.attack();
           cout << endl;
           CursedSummon.takeDamage(hero.attack());
           CursedSummon.attack();
           hero.recieveDamage(CursedSummon.attack());
           cout << endl;
           hero.printStats();
           cout << endl;
           CursedSummon.printStats();
           cout << endl;
       }
       else{
           //hero.getdmg();
           cout << endl;
           hero.manaLoss();
           CursedSummon.takeDamage(hero.getdmg());
           CursedSummon.printStats();
           CursedSummon.attack();
           hero.recieveDamage(CursedSummon.attack());
           cout << endl;
           hero.printStats();
           cout << endl;
           CursedSummon.printStats();
           cout << endl;
       }

       if(CursedSummon.getHealth() <= 0){
           oppdefeated = true;
           cout << "You killed it!\n";
           hero.lvlup();
           hero.printStats();
           round++;
       }
   }while(oppdefeated != true);
   cout << "Congrats! You beat all the 5 monsters!\n";
}
